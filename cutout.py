# -*- coding: utf-8 -*-
"""cutout.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BephEwOYBD-zNhlVtqHHN0uyJ_zLo4eo
"""

# %matplotlib inline
import matplotlib.pyplot as plt
import numpy as np

def get_random_eraser(p=0.5, s_l=0.02, s_h=0.4, r_1=0.3, r_2=1/0.3, v_l=0, v_h=255, pixel_level=False):
    def eraser(input_img):
        img_h, img_w, img_c = input_img.shape
        p_1 = np.random.rand()

        if p_1 > p:
            return input_img

        while True:
            s = np.random.uniform(s_l, s_h) * img_h * img_w
            r = np.random.uniform(r_1, r_2)
            w = int(np.sqrt(s / r))
            h = int(np.sqrt(s * r))
            left = np.random.randint(0, img_w)
            top = np.random.randint(0, img_h)

            if left + w <= img_w and top + h <= img_h:
                break

        if pixel_level:
            c = np.random.uniform(v_l, v_h, (h, w, img_c))
        else:
            c = np.random.uniform(v_l, v_h)

        input_img[top:top + h, left:left + w, :] = c

        return input_img

    return eraser
  
def plot_eraser(p=0.5, s_l=0.02, s_h=0.02, r_1=.5, r_2=1, pixel_level=False):
  cols, rows = 5, 4
  img_num = cols * rows

  x = np.zeros((img_num, 32, 32, 3), dtype=np.uint8)

  eraser = get_random_eraser(p=p, s_l=s_l, s_h=s_h, r_1=r_1, r_2=r_2, pixel_level=pixel_level)

  for i in range(img_num):
      plt.subplot(rows, cols, i + 1)
      plt.imshow(eraser(x[i]), interpolation="nearest")
      plt.axis('off')